public class CS
{
    public static string CSBul1 = "<h2>Глава 1. Въведение в програмирането</h2><br/><span class=\"tab\"></span>1. Запознайте се с Microsoft Visual Studio, Microsoft Developer Network (MSDN) Library Documentation. Инсталирайте<br/><br/><span class=\"tab\"></span>Упътване: Ако разполагате с DreamSpark акаунт или вашето училище или университет предлага безплатен достъп до продуктите на Microsoft, си инсталирайте пълната версия на Microsoft Visual Studio. Ако нямате възможност да работите с пълната версия на Microsoft Visual Studio, можете безплатно да си изтеглите Visual C# Express от сайта на Microsoft, който е напълно безплатен за използване с учебна цел.<br/><br/><span class=\"tab\"></span>Решение: Безплатна версия на Visual Studio може да бъде изтеглена от следния линк: <a href=" + "http://www.visualstudio.com/en-us/products/free-developer-offers-vs" + " target=\"_blank\"><b><u>Visual Studio</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>2. Да се намери описанието на класа System.Console в стандартната .NET API документация (MSDN Library). <br/><br/><span class=\"tab\"></span>Упътване: Може да направите търсене в Google – това добре и често пъти е най-бързият начин да намерим документацията за даден .NET клас.<br/><br/><span class=\"tab\"></span>Решение: Описание за дадения клас може да се намери на следния линк: <a href=" + "http://msdn.microsoft.com/en-us/library/system.console%28v=vs.110%29.aspx" + " target=\"_blank\"><b><u>Console Class</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>3. Да се намери описанието на метода System.Console.WriteLine() с различните негови възможни параметри в MSDN Library.<br/><br/><span class=\"tab\"></span>Упътване: Използвайте същия подход като в предходната задача.<br/><br/><span class=\"tab\"></span>Решение: Описание за дадения клас може да се намери на следния линк: <a href=" + "http://msdn.microsoft.com/en-us/library/system.console.writeline%28v=vs.110%29.aspx" + " target=\"_blank\"><b><u>Console.WriteLine Method</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>4. Да се компилира и изпълни програма за извеждане на \"Hello C#\" през командния ред (конзолата) и с помощта на Visual Studio.<br/><br/><span class=\"tab\"></span>Упътване: Създаваме файл с име HelloCSharp.cs, записваме програмата във файла, компилираме HelloCSharp.cs до файл HelloCSharp.exe и накрая изпълняваме HelloCSharp.exe<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch1-1.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>5. Да се модифицира предходната програма, така че да изписва различно поздравление, например \"Добър ден!\".<br/><br/><span class=\"tab\"></span>Упътване: Използвайте кода на предходната програма и променете съобщението, което се отпечатва. Ако имате проблеми с кирилицата, сменете т. нар. System Locale с български от прозореца \"Region and Language\" в контролния панел на Windows.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch1-2.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>6. Напишете програма, която изписва вашето име и фамилия на конзолата.<br/><br/><span class=\"tab\"></span>Упътване:  Потърсете как се използва метода <code>System.Console.Write()</code>.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch1-3.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>7. Напишете програма, която извежда на конзолата числата 1, 101, 1001 на нов ред.<br/><br/><span class=\"tab\"></span>Упътване: Използвайте метода <code>System.Console.WriteLine()</code>.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch1-4.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>8. Напишете програма, която извежда на конзолата текущата дата и час.<br/><br/><span class=\"tab\"></span>Упътване: Потърсете какви възможности предлага класа <code>System.Math</code>.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch1-5.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>9. Напишете програма, която извежда корен квадратен от числото 12345.<br/><br/><span class=\"tab\"></span>Упътване: Потърсете какви възможности предлага класа <code>System.DateTime</code>.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch1-6.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>10. Напишете програма, която извежда първите 100 члена на редицата 2,  -3, 4, -5, 6, -7, 8.<br/><br/><span class=\"tab\"></span>Упътване: Опитайте се сами да научите от интернет как се ползват цикли в C#.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch1-7.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>11.   Направете програма, която прочита от конзолата вашата възраст и изписва (също на конзолата) каква ще бъде вашата възраст след 10 години.<br/><br/><span class=\"tab\"></span>Упътване: Използвайте методите <code>System.Console.ReadLine()</code> и <code>int.Parse()</code><br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch1-8.jpg\"><br/><br/><hr>";
    public static string CSBul2 = "<h2>Глава 2. Примитивни типове и променливи</h2><br/><span class=\"tab\"></span>1. Декларирайте няколко променливи, като изберете за всяка една най-подходящия от типовете sbyte, byte, short, ushort, int, uint, long и ulong, за да им присвоите следните стойности: 52130, -115, 4825932, 97, -10000, 20000; 224; 970700000; 112; -44; -1000000; 1990; 123456789123456789.<br/><br/><span class=\"tab\"></span>Упътване: Погледнете размерността на числените типове.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch2-1.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>2. Кои от следните стойности може да се присвоят на променливи от тип float, double и decimal: 34.567839023; 12.345; 8923.1234857; 3456.091124875956542151256683467?<br/><br/><span class=\"tab\"></span>Упътване: Имайте предвид броя символи след десетичния знак. Направете справка в таблицата с размерите на типовете float, double и decimal.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch2-2.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>3. Напишете програма, която изчислява вярно променливи с плаваща запетая с точност до 0.000001.<br/><br/><span class=\"tab\"></span>Упътване: Използвайте типа данни decimal.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch2-3.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>4. Инициализирайте променлива от тип int със стойност 256 в шестна­десетичен формат (256 е 100 в бройна система с основа 16).<br/><br/><span class=\"tab\"></span>Упътване: Вижте секцията за целочислени литерали. За да преобразувате лесно числата в различна бройна система използвайте вградения в Windows калкулатор. За шестнайсетично представяне на литерал използвайте префикса 0x.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch2-4.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>5. Декларирайте променлива от тип char и присвоете като стойност символа който има Unicode код 72 (използвайте калкулатора на Windows за да намерите шестнайсетичното представяне на 72). <br/><br/><span class=\"tab\"></span>Упътване: Прочетете за целочислени литерали.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch2-5.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>6. Декларирайте променлива isMale от тип bool и присвоете стойност на последната в зависимост от вашия пол.<br/><br/><span class=\"tab\"></span>Упътване:  Прочетете за булеви променливи.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch2-6.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>7. Декларирайте две променливи от тип string със стойности \"Hello\" и \"World\". Декларирайте променлива от тип object. Присвоете на тази променлива стойността, която се получава от конкатенацията на двете стрингови променливи (добавете интервал, ако е необходимо). Отпе­чатайте променливата от тип object.<br/><br/><span class=\"tab\"></span>Упътване: Вижте секциите за символни низове и за обектен тип данни.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch2-7.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>8. Декларирайте две променливи от тип string и им присвоете стойности \"Hello\" и \"World\". Декларирайте променлива от тип object и и присвоете стойността на конкатенацията на двете променливи от тип string (не изпускайте интервала по средата). Декларирайте трета променлива от тип string и я инициализирайте със стойността на променливата от тип object ( трябва да използвате type casting).<br/><br/><span class=\"tab\"></span>Упътване: Прочетете за символни низове и за обектен тип данни.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch2-8.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>9. Декларирайте две променливи от тип string и им присвоете стойност \"The \"use\" of quotations causes difficulties.\" (без първите и последни кавички). В едната променлива използвайте quoted string, а в другата не го използвайте.<br/><br/><span class=\"tab\"></span>Упътване: Прочетете за символни литерали. Необходимо е да използвате символа за escaping (наклонена черта).<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch2-9.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>10. Напишете програма, която принтира фигура във формата на сърце със знака \"o\".<br/><br/><span class=\"tab\"></span>Упътване: Използвайте Console.Writeline(…) като използвате само символа ‘о’ и интервали.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch2-10.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>11. Напишете програма, която принтира на конзолата равнобедрен триъгълник, като страните му са очертани от символа звездичка \"©\".<br/><br/><span class=\"tab\"></span>Упътване: Използвайте Console.Writeline(…) като използвате само знака © и интервали. Използвайте Windows Character Map, за да намерите Unicode кода на знака \"©\".<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch2-11.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>12. Фирма, занимаваща се с маркетинг, иска да пази запис с данни на нейните служители. Всеки запис трябва да има следната характе­ристика – първо име, фамилия, възраст, пол (‘м’ или ‘ж’) и уникален номер на служителя (27560000 до 27569999). Декларирайте необходи­мите променливи, нужни за да се запази информацията за един служи­тел, като използвате подходящи типове данни и описателни имена.<br/><br/><span class=\"tab\"></span>Упътване: За имената използвайте тип string, за пола използвайте тип char (имаме само един символ м/ж), а за уникалния номер и възрастта използвайте подходящ целочислен тип.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch2-12.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>13. Декларирайте две променливи от тип int. Задайте им стойности съответно 5 и 10. Разменете стойностите им и ги отпечатайте.<br/><br/><span class=\"tab\"></span>Упътване: Използвайте трета временна променлива за размяната на променливи. За целочислените променливи е възможно и друго решение, което не използва трета променлива.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch2-13.jpg\"><br/><br/><hr>";
    public static string CSBul3 = "<h2>Глава 3. Оператори и изрази</h2><br/><span class=\"tab\"></span>1. Напишете израз, който да проверява дали дадено цяло число е четно или нечетно.<br/><br/><span class=\"tab\"></span>Упътване: Вземете остатъкът от деленето на числото на 2 и проверете дали е 0 или 1 (съответно числото е четно или нечетно). Използвайте оператора % за пресмятане на остатък от целочислено деление.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch3-1.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>2. Напишете булев израз, който да проверява дали дадено цяло число се дели на 5 и на 7 без остатък.<br/><br/><span class=\"tab\"></span>Упътване: Ползвайте логическо \"И\" (оператора &&) и операцията % за остатък при деление. Можете да решите задачата и чрез само една проверка – за деление на 35 (помислете защо).<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch3-2.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>3. Напишете израз, който да проверява дали третата цифра (отдясно на ляво) на дадено цяло число е 7.<br/><br/><span class=\"tab\"></span>Упътване: Разделете числото на 100 и го запишете в нова променлива. Нея разделете на 10 и вземете остатъкът. Остатъкът от делението на 10 е третата цифра от първоначалното число. Проверете равна ли е на 7.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch3-3.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>4. Напишете израз, който да проверява дали третия бит на дадено число е 1 или 0.<br/><br/><span class=\"tab\"></span>Упътване: Използвайте побитово \"И\" върху числото и число, което има 1 само в третия си бит (т.е. числото 8, ако броенето на битовете започне от 0). Ако върнатият резултат е различен от 0, то третия бит е 1.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch3-4.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>5. Напишете израз, който изчислява площта на трапец по дадени a, b и h.<br/><br/><span class=\"tab\"></span>Упътване: Формула за лице на трапец: S = (a + b) / 2 * h.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch3-5.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>6. Напишете програма, която за подадени от потребителя дължина и височина на право­ъгълник, пресмята и отпечатва на конзолата неговия периметър и лице.<br/><br/><span class=\"tab\"></span>Упътване: Потърсете в Интернет как се въвеждат цели числа от конзолата и използвайте формулата за лице на правоъгълник.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch3-6.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>7. Силата на гравитационното поле на Луната е приблизително 17% от това на Земята. Напишете програма, която да изчислява тежестта на човек на Луната, по дадената тежест на Земята.<br/><br/><span class=\"tab\"></span>Упътване: Прочетете число от конзолата, след което го умножете по 0.17 и го отпечатайте.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch3-7.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>8. Напишете програма, която проверява дали дадена точка О (x, y) е вътре в окръжността К ((0,0), 5). Пояснение: точката (0,0) е център на окръжността, а радиусът й е 5.<br/><br/><span class=\"tab\"></span>Упътване: Използвайте питагоровата теорема a2 + b2 = c2. За да е точката вътре в кръга, то x*x + y*y следва да е по-малко или равно на 5.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch3-8.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>9. Напишете програма, която проверява дали дадена точка О (x, y) е вътре в окръжността К ((0,0), 5) и едновременно с това извън право­ъгълника ((-1, 1), (5, 5). Пояснение: правоъгълникът е зададен чрез координатите на горния си ляв и долния си десен ъгъл.<br/><br/><span class=\"tab\"></span>Упътване: Използвайте кода от предходната задача и добавете проверка за правоъгълника. Една точка е вътре в даден правоъгълник със стени успоредни на координатните оси, когато е вдясно от лявата му стена, вляво от дясната му стена, надолу от горната му стена и нагоре от долната му стена.<br/><br/><span class=\"tab\"></span>Решение: <a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%203%20Solution%209/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>10. Напишете програма, която приема за вход четирицифрено число във формат abcd  (например числото 2011) и след това извършва следните действия върху него:<br/><span class=\"tab\"></span>-Пресмята сбора от цифрите на числото (за нашия пример 2+0+1+1 = 4).<br/><span class=\"tab\"></span>-Разпечатва на конзолата цифрите в обратен ред: dcba (за нашия пример резултатът е 1102).<br/><span class=\"tab\"></span>-Поставя последната цифра, на първо място: dabc (за нашия пример резултатът е 1201).<br/><span class=\"tab\"></span>-Разменя мястото на втората и третата цифра: acbd (за нашия пример резултатът е 2101).<br/><br/><span class=\"tab\"></span>Упътване: За да вземете отделните цифри на числото, можете да го делите на 10 и да взимате остатъка при деление на 10 последователно 4 пъти.<br/><br/><span class=\"tab\"></span>Решение: <a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%203%20Solution%2010/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>11. Дадено е число n и позиция p. Напишете поредица от операции, които да отпечатат стойността на бита на позиция p от числото n (0 или 1). Пример: n=35, p=5 -> 1. Още един пример: n=35, p=6 -> 0.<br/><br/><span class=\"tab\"></span>Упътване:  Ползвайте побитови операции.<br/><br/><span class=\"tab\"></span>Решение: <a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%203%20Solution%2011/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>12. Напишете булев израз, който проверява дали битът на позиция p на цялото число v има стойност 1. Пример v=5, p=1 -> false.<br/><br/><span class=\"tab\"></span>Упътване: Задачата е аналогична на предната.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch3-12.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>13. Дадено е число n, стойност v (v = 0 или 1) и позиция p. Напишете поредица от операции, които да променят стойността на n, така че битът на позиция p да има стойност v. Пример n=35, p=5, v=0 -> n=3. Още един пример: n=35, p=2, v=1 -> n=39.<br/><br/><span class=\"tab\"></span>Упътване: Ползвайте побитови операции, по аналогия със задача 11.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch3-13.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>14. Напишете програма, която проверява дали дадено число n (1 < n < 100) е просто (т.е. се дели без остатък само на себе си и на единица).<br/><br/><span class=\"tab\"></span> Упътване: Прочетете за цикли в Интернет. Използвайте цикъл и проверете числото за делимост на всички числа от 1 до корен квадратен от числото. В конкретната задача, тъй като ограничението е само до 100, можете предварително да намерите простите числа от 1 до 100 и да направите проверки дали даденото число n e равно на някое от тях.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch3-14.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>15. Напишете програма, която разменя стойностите на битовете на позиции 3, 4 и 5 с битовете на позиции 24, 25 и 26 на дадено цяло положително число.<br/><br/><span class=\"tab\"></span>Упътване: За решението на тази задача използвайте комбинация от задачите за взимане и установяване на бит на определена позиция.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%203%20Solution%2015/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>16. Напишете програма, която разменя битовете на позиции {p, p+1, …, p+k-1) с битовете на позиции {q, q+1, …, q+k-1} на дадено цяло положително число.<br/><br/><span class=\"tab\"></span>Упътване: Използвайте предната задача и прочетете в интернет как се работи с цикли и масиви (в които да запишете битовете).<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%203%20Solution%2016/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr>";
    public static string CSBul4 = "<h2>Глава 4. Вход и изход от конзолата</h2><br/><span class=\"tab\"></span>1. Напишете програма, която чете от конзолата три числа от тип int и отпечатва тяхната сума.<br/><br/><span class=\"tab\"></span>Упътване: Използвайте методите Console.ReadLine() и Int32.Parse().<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch4-1.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>2. Напишете програма, която чете от конзолата радиуса \"r\" на кръг и отпечатва неговия периметър и обиколка.<br/><br/><span class=\"tab\"></span>Упътване: Използвайте константата Math.PI и добре известните формули от планиметрията.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch4-2.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>3. Дадена фирма има име, адрес, телефонен номер, факс номер, уеб сайт и мениджър. Мениджърът има име, фамилия и телефонен номер. Напишете програма, която чете информацията за фирмата и нейния мениджър и я отпечатва след това на конзолата.<br/><br/><span class=\"tab\"></span>Упътване: Форматирайте текста с Write(…) или WriteLine(…).<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%204%20Solution%203/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>4. Напишете програма, която отпечатва три числа в три виртуални колони на конзолата. Всяка колона трябва да е с широчина 10 символа, а числата трябва да са ляво подравнени. Първото число трябва да е цяло число в шестнадесетична бройна система, второто да е дробно положи­телно, а третото – да е дробно отрицателно. Последните две числа да се закръглят до втория знак след десетичната запетая.<br/><br/><span class=\"tab\"></span>Упътване: Използвайте форматиращите настройки, предоставени от съставното форматиране и метода Console.WriteLine().<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch4-4.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>5. Напишете програма, която чете от конзолата две цели числа (int) и отпечатва, колко числа има между тях, такива, че остатъкът им от деленето на 5 да е 0. Пример: в интервала (17, 25) има 2 такива числа.<br/><br/><span class=\"tab\"></span>Упътване: Има два подхода за решаване на задачата:<br/><span class=\"tab\"></span><span class=\"tab\"></span>Първи подход: Използват се математически хитрини за оптимизирано изчисляване, базирани на факта, че всяко пето число се дели на 5.<br/><span class=\"tab\"></span><span class=\"tab\"></span>Вторият подход е по-лесен, но работи по-бавно. Чрез for цикъл може да се провери всяко число в дадения интервал. За целта трябва да прочетете от Интернет как се използва for цикъл.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch4-5.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>6. Напишете програма, която чете две числа от конзолата и отпечатва по-голямото от тях. Решете задачата без да използвате условни конструкции.<br/><br/><span class=\"tab\"></span>Упътване: По-голямото от двете числа можете да намерите с функцията Math.Max(a, b), а по-малкото с Math.Min(a, b).<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch4-6.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>7. Напишете програма, която чете пет числа и отпечатва тяхната сума. При невалидно въведено число да се подкани потребителя да въведе друго число.<br/><br/><span class=\"tab\"></span>Упътване: Можете да прочетете числата в пет различни променливи и накрая да ги сумирате. При парсване на поредното число използвайте условно парсване с TryParse(…). При въведено невалидно число повторете четенето на число. Можете да сторите това чрез while цикъл с подходящо условие за изход. За да няма повторение на код, можете да раз­гледате конструк­цията за цикъл \"for\".<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%204%20Solution%207/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>8. Напишете програма, която чете пет числа от конзолата и отпечатва най-голямото от тях.<br/><br/><span class=\"tab\"></span>Упътване: Трябва да използвате конструкцията за сравнение \"if\", за която можете да прочетете в Интернет.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%204%20Solution%208/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>9. Напишете програма, която чете коефициентите a, b и c от конзолата и решава уравнението: ax2+bx+c=0. Програмата трябва да принтира реалните решения на уравнението на конзолата.<br/><br/><span class=\"tab\"></span>Упътване: Използвайте добре познатия метод за решаване на квадратни уравнения. Разгледайте внимателно всички възможни случаи.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%204%20Solution%209/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>10. Напишете програма, която прочита едно цяло число n от конзолата. След това прочита още nна брой числа от конзолата и отпечатва тяхната сума.<br/><br/><span class=\"tab\"></span>Упътване: Четете числата едно след друго и натрупвайте тяхната сума в променлива, която накрая изведете на конзолата. <br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch4-10.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>11. Напишете програма, която прочита цяло число n от конзолата и отпечатва на конзолата всички числа в интервала [1…n], всяко на отделен ред.<br/><br/><span class=\"tab\"></span>Упътване: Използвайте комбинация от цикли и методите Console.ReadLine(),Console.WriteLine() и Int32.Parse().<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch4-11.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>12. Напишете програма, която отпечатва на конзолата първите 100 числа от редицата на Фибоначи: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, ...<br/><br/><span class=\"tab\"></span>Упътване: За решение на задачата използвайте 2 временни променливи, в които да пазите последните 2 пресметнати стойности и с цикъл пресмятайте останалите (всяко следващо число в редицата е сума от последните две).<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch4-12.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>13. Напишете програма, която пресмята сумата (с точност до 0.001):1 + 1/2 - 1/3 + 1/4 - 1/5 + ...<br/><br/><span class=\"tab\"></span>Упътване: Натрупвайте сумата в променлива с цикъл и пазете старата сума, докато разликата между двете суми стане по-малка от точността (0.001).<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch4-13.jpg\"><br/><br/><hr>";
    public static string CSBul5 = "<h2>Глава 5. Условни конструкции</h2><br/><span class=\"tab\"></span>1. Да се напише <code>if</code>-конструкция, която проверява стойността на две целочислени променливи и разменя техните стойности, ако стойността на първата променлива е по-голяма от втората.<br/><br/><span class=\"tab\"></span>Упътване: Прочетете за if конструкции.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch5-1.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>2. Напишете програма, която показва знака (+ или -) от произведението на три реални числа, без да го пресмята. Използвайте последователност от <code>if</code> оператори.<br/><br/><span class=\"tab\"></span>Упътване: Множество от ненулеви числа имат положително произведение, ако отрицателните сред тях са четен брой. Ако отрицателните числа в множеството са нечетен брой, произведението е отрицателно. Ако някое от числата е нула, произведението е нула.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%205%20Solution%202/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>3. Напишете програма, която намира най-голямото по стойност число, измежду три дадени числа.<br/><br/><span class=\"tab\"></span>Упътване: Можете да използвате вложени <code>if</code> конструкции. <br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%205%20Solution%203/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>4. Сортирайте 3 реални числа в намаляващ ред. Използвайте вложени <code>if</code> оператори.<br/><br/><span class=\"tab\"></span>Упътване: Първо намерете най-малкото от трите числа, след това го разменете с първото. После проверете дали второто е по-голямо от третото и ако е така, ги разменете.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%205%20Solution%204/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>5. Напишете програма, която за дадена цифра (0-9), зададена като вход, извежда името на цифрата на български език.<br/><br/><span class=\"tab\"></span>Упътване: Най-подходящо е да използвате <code>switch</code> конструкция.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch5-5.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>6. Напишете програма, която при въвеждане на коефициентите (a, b и c) на квадратно уравнение: ax2+bx+c, изчислява и извежда неговите реални корени (ако има такива). Квадратните уравнения могат да имат 0, 1 или 2 реални корена.<br/><br/><span class=\"tab\"></span>Упътване: Вижте начина за решаване на квадратно уравнение.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%205%20Solution%206/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>7. Напишете програма, която намира най-голямото по стойност число измежду дадени 5 числа.<br/><br/><span class=\"tab\"></span>Упътване:  Използвайте вложени <code>if</code> конструкции. Можете да използвате конструкцията за цикъл <code>for</code>, за която можете да прочетете в Интернет.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch5-7.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>8. Напишете програма, която по избор на потребителя прочита от конзолата променлива от тип <code>int</code>, <code>double</code> или <code>string</code>. Ако променливата е <code>int</code> или <code>double</code>, трябва да се увеличи с 1. Ако променливата е <code>string</code>, трябва да се прибави накрая символа \"*\". Отпечатайте получения резултат на конзолата. Използвайте <code>switch</code> конструкция.<br/><br/><span class=\"tab\"></span>Упътване: Използвайте входна променлива, която да показва от какъв тип ще е входа, т.е. при въвеждане на 0 типа е <code>int</code>, при 1 е <code>double</code> и при 2 е <code>string</code>.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%205%20Solution%208/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>9. Дадени са пет цели числа. Напишете програма, която намира онези подмножества от тях, които имат сума 0. Примери:<br/><span class=\"tab\"></span>-  Ако са дадени числата {3, -2, 1, 1, 8}, сумата на -2, 1 и 1 е 0. <br/><span class=\"tab\"></span>-Ако са дадени числата {3, 1, -7, 35, 22}, няма подмножества със сума 0.<br/><br/><span class=\"tab\"></span>Упътване: Използвайте вложени <code>if</code> конструкции или последователност от сравнения, за да проверите сумите на всичките 15 подмножества на дадените числа (без празното).<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%205%20Solution%209/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>10. Напишете програма, която прилага бонус точки към дадени точки в интервала [1..9] чрез прилагане на следните правила: <br/><span class=\"tab\"></span>-  Ако точките са между 1 и 3, програмата ги умножава по 10. <br/><span class=\"tab\"></span>-  Ако точките са между 4 и 6, ги умножава по 100. <br/><span class=\"tab\"></span>-  Ако точките са между 7 и 9, ги умножава по 1000. <br/><span class=\"tab\"></span>-  Ако точките са 0 или повече от 9, се отпечатва съобщение за грешка.<br/><br/><span class=\"tab\"></span>Упътване: Използвайте <code>switch</code> конструкция и накрая изведете като резултат на конзолата пресметнатите точки.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/tree/master/Chapter%205%20Solution%2010/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>11. Напишете програма, която преобразува дадено число в интервала [0..999] в текст, съответстващ на българското произношение на числото. Примери:<br/><span class=\"tab\"></span>-  0 → \"Нула\"<br/><span class=\"tab\"></span>-  12 → \"Дванадесет\"<br/><span class=\"tab\"></span>-  98 → \"Деветдесет и осем\"<br/><span class=\"tab\"></span>-  273 → \"Двеста седемдесет и три\"<br/><span class=\"tab\"></span>-  400 → \"Четиристотин\"<br/><span class=\"tab\"></span>-  501 → \"Петстотин и едно\"<br/><span class=\"tab\"></span>-  711 → \"Седемстотин и единадесет\"<br/><br/><span class=\"tab\"></span>Упътване: Използвайте вложени <code>switch</code> конструкции. Да се обърне специално внимание на числата от 0 до 19 и на онези, в които единиците са 0.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%205%20Solution%2011/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr>";
    public static string CSBul6 = "<h2>Глава 6. Цикли</h2><br/><span class=\"tab\"></span>1. Напишете програма, която отпечатва на конзолата числата от 1 до N. Числото N трябва да се чете от стандартния вход.<br/><br/><span class=\"tab\"></span>Упътване: Използвайте <code>for</code> цикъл.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch6-1.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>2. Напишете програма, която отпечатва на конзолата числата от 1 до N, които не се делят едновременно на 3 и 7. Числото N да се чете от стандартния вход.<br/><br/><span class=\"tab\"></span>Упътване: Използвайте <code>for</code> цикъл и оператора % за намиране на остатък при целочислено деление. Едно число num не се дели на 3 и на 7 едновременно, ако <code> (num % (3*7) == 0) </code>.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%206%20Solution%202/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>3. Напишете програма, която чете от конзолата поредица от цели числа и отпечатва най-малкото и най-голямото от тях.<br/><br/><span class=\"tab\"></span>Упътване: Първо прочетете броя числа, примерно в променлива <code>n</code>. След това въведете <code>n</code> числа последователно с един <code>for</code> цикъл. Докато въвеждате всяко следващо число запазвайте в две променливи най-малкото и най-голямото число до момента.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%206%20Solution%203/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>4. Напишете програма, която отпечатва всички възможни карти от стан­дартно тесте карти без джокери (имаме 52 карти: 4 бои по 13 карти).<br/><br/><span class=\"tab\"></span>Упътване: Номерирайте картите от 2 до 14 (тези числа ще съответстват на картите от 2, 3, 4, 5, 6, 7, 8, 9, 10, J, Q, K, A). Номерирайте боите от 1 до 4 (1 – спатия, 2 – каро, 3 – купа, 4 – пика). Сега вече можете да завъртите 2 вложени цикъла и да отпечатате всяка от картите.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%206%20Solution%204/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>5. Напишете програма, която чете от конзолата числото N и отпечатва сумата на първите N члена от редицата на Фибоначи: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, ...<br/><br/><span class=\"tab\"></span>Упътване: Числата на Фибоначи започват от 0 и 1, като всяко следващо се получава като сума от предходните две. Можете да намерите първите <code>n</code> числа на Фибоначи с <code>for</code> цикъл от 1 до <code>n</code>, като на всяка итерация пресмятате поредното число, използвайки предходните две (които ще пазите в две допълнителни променливи).<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%206%20Solution%205/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span> 6. Напишете програма, която пресмята N!/K! за дадени N и K (1<K<N).<br/><br/><span class=\"tab\"></span>Упътване: Умножете числата от K+1 до N.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch6-6.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>7. Напишете програма, която пресмята N!*K!/(N-K)! за дадени N и K (1<K<N).<br/><br/><span class=\"tab\"></span>Упътване:  Вариант за решение е поотделно да пресмятате всеки от факто­риелите и накрая да извършвате съответните операции с резултатите. Помис­лете как можете да оптимизирате пресмятанията, за да не смятате прекалено много факториели! При обикновени дроби, съставени от факто­риели има много възможности за съкращение на еднакви множи­тели в числителя и знаменателя. Тези оптимизации не само ще нама­лят изчисленията и ще увеличат производителността, но ще ви избавят и от препълвания в някои ситуации.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%206%20Solution%207/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>8. В комбинаториката числата на Каталан (Catalan’s numbers) се изчис­ляват по следната формула:<br/><span class=\"tab\"></span><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch6-8.png\">, за n ≥ 0.<br/><span class=\"tab\"></span>Напишете програма, която изчислява n-тото число на Каталан за дадено n.<br/><br/><span class=\"tab\"></span>Упътване: Погледнете предходната задача.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%206%20Solution%208/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>9. Напишете програма, която за дадено цяло число n, пресмята сумата: <img src=\"/Resources/CSResources/ch6-9.png\"><br/><br/><span class=\"tab\"></span>Упътване: Задачата може да решите с <code>for</code>-цикъл за <code>k=0…n</code>, като ползвате три допълнителни променливи <code>factoriel, power</code> и <code>sum</code>, в които да пазите за <code>k</code>-тата итерация на цикъла съответно <code>k!, xk</code> и сумата на първите <code>k</code> члена на редицата. Ако реализацията ви е добра, Трябва да имате само един цикъл и не трябва да ползвате външни функции за изчис­ление на факториел и за степенуване.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch6-9.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>10. Напишете програма, която чете от конзолата положително цяло число N (N < 20) и отпечатва матрица с числа като на фигурата по-долу:<br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch6-10 example.jpg\"><br/><br/><span class=\"tab\"></span>Упътване: Трябва да използвате два вложени цикъла, по подобие на задачата за отпечатване на триъгълник с числа. Външният цикъл трябва да върти от 1 до N, а вътрешният – от стойността на външния до стойността на външния + N - 1.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch6-10.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>11. Напишете програма, която пресмята с колко нули завършва факториелът на дадено число. Примери:<br/><span class=\"tab\"></span>N = 10 -> N! = 36288<b>00</b> -> 2<br/><span class=\"tab\"></span>N = 20 -> N! = 243290200817664<b>0000</b> -> 4<br/><br/><span class=\"tab\"></span>Упътване: Броят на нулите в края на n! зависи от това, колко пъти числото 10 е делител на факториела. Понеже произведението 1*2*3…*n има повече на брой делители 2, отколкото 5, а 10 = 2 * 5, то броят нули в n! е точно толкова, колкото са множителите със стойност 5 в произведе­нието 1*2*3….*n. Понеже всяко пето число се дели на 5, а всяко 25-то число се дели на 5 двукратно и т.н., то броя нули в n! е сумата: n/5 + n/25 + n/125 + …<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch6-11.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>12. Напишете програма, която преобразува дадено число от десетична в двоична бройна система.<br/><br/><span class=\"tab\"></span>Упътване: Прочетете в Уикипедия какво представляват бройните системи.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch6-12.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>13. Напишете програма, която преобразува дадено число от двоична в десетична бройна система.<br/><br/><span class=\"tab\"></span>Упътване: Погледнете предходната задача.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch6-13.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>14. Напишете програма, която преобразува дадено число от десетична в шестнайсетична бройна система.<br/><br/><span class=\"tab\"></span>Упътване: Погледнете предходната задача.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch6-14.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>15. Напишете програма, която преобразува дадено число от шестнайсе­тична в десетична бройна система.<br/><br/><span class=\"tab\"></span>Упътване:  Погледнете предходната задача.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch6-15.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>16. Напишете програма, която по дадено число N отпечатва числата от 1 до N, разбъркани в случаен ред.<br/><br/><span class=\"tab\"></span>Упътване: Потърсете в Интернет информация за класа <code>System.Random</code>. Прочетете в Интернет за масиви. Направете масив с N елемента и запишете в него числата от 1 до N. След това достатъчно много пъти (помислете точно колко) разменяйте двойки случайни числа от масива.<code>string</code>.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%206%20Solution%2016/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>17. Напишете програма, която за дадени две числа, намира най-големия им общ делител.<br/><br/><span class=\"tab\"></span>Упътване: Потърсете в интернет за алгоритъма на Евклид.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch6-17.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>18. Напишете програма, която по дадено число n, извежда матрица във формата на спирала. Пример при n=4:<br/><span class=\"tab\"></span><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch6-18.jpg\"><br/><br/><span class=\"tab\"></span>Упътване: Трябва да използвате двумерен масив.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%206%20Solution%2018/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr>";
    public static string CSBul7 = "<h2>Глава 7. Масиви</h2><br/><span class=\"tab\"></span>1. Да се напише програма, която създава масив с 20 елемента от целочислен тип и инициализира всеки от елементите със стойност равна на индекса на елемента умножен по 5. Елементите на масива да се изведат на конзолата.<br/><br/><span class=\"tab\"></span>Упътване: Използвайте  масив и <code>for</code> цикъл.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%207%20Solution%201/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>2. Да се напише програма, която чете два масива от конзолата и прове­рява дали са еднакви.<br/><br/><span class=\"tab\"></span>Упътване: Два масива са еднакви, когато имат еднаква дължина и стойностите на елементите в тях съответно съвпадат. Второто условие можете да проверите с <code>for</code> цикъл.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%207%20Solution%202/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>3. Да се напише програма, която сравнява два масива от тип char лексикографски (буква по буква) и проверява кой от двата е по-рано в лексикографската подредба.<br/><br/><span class=\"tab\"></span>Упътване: При лексикографската наредба символите се сравняват един по един като се започва от най-левия. При несъвпадащи символи по-рано е масивът, чийто текущ символ е по-рано в азбуката. При съвпадение се продължава със следващия символ вдясно. Ако се стигне до края на единия масив, по-краткият е лексикографски по-рано. Ако всички съответни символи от двата масива съвпаднат, то масивите са еднакви и никой о тях не е по-рано в лексикографската наредба.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%207%20Solution%203/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>4. Напишете програма, която намира максимална редица от последова­телни еднакви елементи в масив. <br/><span class=\"tab\"></span>Пример: {2, 1, 1, 2, 3, 3, <b>2, 2, 2</b>, 1} <span style=\"font-family: Wingdings;\">à</span> {2, 2, 2}.<br/><br/><span class=\"tab\"></span>Упътване: Сканирайте масива отляво надясно. Всеки път, когато текущото число е различно от предходното, от него започва нова подредица, а всеки път, когато текущото число съвпада с предходното, то е продължение на текущата подредица. Следователно, ако пазите в две променливи <code>start</code> и <code>len</code> съответно индекса на началото на текущата подредица от еднакви елементи (в началото той е 0) и дължината на текущата подредица (в началото той е 1), можете да намерите всички подредици от еднакви елементи и техните дължини. От тях лесно може да се избере най-дългата и да се запомня в две допълнителни променливи – <code>bestStart</code> и <code>bestLen</code>.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%207%20Solution%204/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>5. Напишете програма, която намира максималната редица от последова­телни нараст­ващи елементи в масив. <br/><span class=\"tab\"></span>Пример: {3, <b>2, 3, 4</b>, 2, 2, 4} <span style=\"font-family: Wingdings;\">à</span>  {2, 3, 4}.<br/><br/><span class=\"tab\"></span>Упътване: Тази задача е много подобна на предходната, но при нея даден елемент се счита за продължение на текущата редица тогава и само тогава, когато е по-голям от предхождащия го елемент.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%207%20Solution%205/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span> 6. Напишете програма, която намира максималната подредица от нараст­ващи елементи в масив <code>arr[n]</code>. Елементите може и да не са последо­вателни. <br/><span class=\"tab\"></span>Пример: {9, 6, <b>2</b>, 7, <b>4</b>, 7, <b>6</b>, 5, <b>8</b>, 4} <span style=\"font-family: Wingdings;\">à</span>  {2, 4, 6, 8}.<br/><br/><span class=\"tab\"></span>Упътване: Задачата може да се реши с два вложени цикъла и допълнителен масив <code>len[0..n-1] </code>. Нека в стойността <code>len[i] </code> пазим дължината на най-дългата нарастваща подредица, която започва някъде в масива (не е важно къде) и завършва с елемента <code>arr[i] </code>. Тогава <code>len[0]=1</code>, a <code>len[x] </code> е максималната сума <code>max(1+len[prev]) </code>, където <code> prev < x </code> и <code>arr[prev] < arr[x] </code>. Следвайки дефиницията <code>len[0..n-1] </code> може да се пресметне с два вложени цикъла по следния начин: първият цикъл обхожда масива последователно отляво надясно с водеща променлива x. Вторият цикъл (който е вложен в първия) обхожда масива от началото до позиция <code>x-1</code> и търси елемент <code>prev</code> с максимална стойност на <code>len[prev]</code>, за който <code> arr[prev] < arr[x] </code>. След приключване на търсенето <code>len[x] </code> се инициализира с 1 + най-голямата намерена стойност на <code>len[prev] </code>или с 1, ако такава не е намерена. <br/><span class=\"tab\"></span>Описаният алгоритъм намира дължините на всички максимални нарастващи подредици, завършващи във всеки негов елемент. Най-голямата от тези стойности е дължината на най-дългата нарастваща подредица. Ако трябва да намерим самите елементи съставящи тази максимална нарастваща подредица, можем да започнем от елемента, в който тя завършва (нека той е на индекс x), да го отпечатаме и да търсим предходния елемент (<code>prev</code>). За него е в сила, че <code>prev < x</code> и <code>len[x]=1+len[prev] </code>. Така намирайки и отпечатвайки предходния елемент докато има такъв, можем да намерим елементите съставящи най-дългата нарастваща подредица в обратен ред (от последния към първия).<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%207%20Solution%206/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>7. Да се напише програма, която чете от конзолата две цели числа N и K (K < N), и масив от N елемента. Да се намерят тези K поредни елемента, които имат максимална сума.<br/><br/><span class=\"tab\"></span>Упътване:  Можете да проверите коя от поредица от K числа има най-голяма сума като проверите сумите на всички такива поредици. Първата такава поредица започва от индекс 0 и завършва в индекс K-1 и нека тя има сума S. Тогава втората редица от K елемента започва от индекс 1 и завършва в индекс K, като нейната сума може да се получи като от S се извади нулевия елемент и се добави K-ти елемент. По същия начин може да се продължи до достигане на края на редицата.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%207%20Solution%207/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>8. Сортиране на масив означава да подредим елементите му в нарастващ (намаляващ) ред. Напишете програма, която сортира масив. Да се използва алгоритъма \"<code>Selection sort</code>\".<br/><br/><span class=\"tab\"></span>Упътване: Потърсете в Интернет информация за алгоритъма \"<code>Selection sort</code>\" и неговите реализации. Накратко идеята е да се намери най-малкият елемент, после да се сложи на първа позиция, след това да се намери втория най-малък и да се сложи на втора позиция и т.н., докато целият масив се подреди в нарастващ ред.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%207%20Solution%208/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>9. Напишете програма, която намира последователност от числа, чиито сума е максимална. <br/><span class=\"tab\"></span>Пример: {2, 3, -6, -1, <b>2, -1, 6, 4</b>, -8, 8} <span style=\"font-family: Wingdings;\">à</span>  <b>11</b><br/><br/><span class=\"tab\"></span>Упътване: Тази задача има два начина, по които може да се реши. Един от тях е с пълно изчерпване, т.е. с два цикъла проверяваме всяка възможна сума. Втория е масива да се обходи само с 1 цикъл като на всяко завъртане на цикъла проверяваме дали текущата сума е по-голяма от вече намерената максимална сума. Задачата може да се реши и с техниката \"Динамично оптимиране\". Потърсете повече за нея в Интернет.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%207%20Solution%209/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>10. Напишете програма, която намира най-често срещания елемент в масив. <br/><span class=\"tab\"></span>Пример: {<b>4</b>, 1, 1, <b>4</b>, 2, 3, <b>4</b>, <b>4</b>, 1, 2, <b>4</b>, 9, 3} <span style=\"font-family: Wingdings;\">à</span>  4 (среща се 5 пъти).<br/><br/><span class=\"tab\"></span>Упътване: Тази задача може да се решите по много начини. Един от тях е следният: взимате първото число и проверявате колко пъти се повтаря в масива, като пазите този брой в променлива. След всяко прочитане на еднакво число го заменяте с <code>int.MinValue</code>. След това взимате следващото и отново правите същото действие. Неговия брой среща­ния сравнявате с числото, което сте запазили в променливата и ако то е по-голямо, го присвоявате на променливата. Както се досещате, ако намерите число равно на <code>int.MinValue</code> преминавате към следващото.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%207%20Solution%2010/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>11. Да се напише програма, която намира последователност от числа в масив, които имат сума равна на число, въведено от конзолата (ако има такава). <br/><span class=\"tab\"></span>Пример: {4, 3, 1, <b>4</b>, <b>2</b>, <b>5</b>, 8}, S=11 <span style=\"font-family: Wingdings;\">à</span> {4, 2, 5}.<br/><br/><span class=\"tab\"></span>Упътване: Задачата може да се реши с два вложени цикъла. Първият задава началната позиция за втория – от първия до последния елемент. Вторият цикъл започва от позицията, зададена от първия цикъл и сумира последова­телно числата надясно едно по едно, докато сумата не надвиши S. Ако сумата е равна на S, се запомня числото от първия цикъл (то е началото на поредицата) и числото от втория цикъл (то е краят на поредицата). <br/><span class=\"tab\"></span>Ако всички числа са положителни, съществува и много по-бърз алгоритъм. Сумирате числата отляво надясно като започвате от нулевото. В момента, в който текущата сума надвиши S, премахвате най-лявото число от редицата и го изваждате от текущата сума. Ако тя пак е по-голяма от търсената, премахвате и следващото число отляво и т.н. докато текущата сума не стане по-малка от S. След това продължавате с поредното число отдясно. Ако намерите търсената сума, я отпечатвате заедно с редицата, която я образува. Така само с едно сканиране на елементите на масива и добавяне на числа от дясната страна към текущата редица и премахване на числа от лявата й страна (при нужда), решавате задачата.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%207%20Solution%2011/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>12. Напишете програма, която създава следните квадратни матрици и ги извежда на конзолата във форматиран вид. Размерът на матриците се въвежда от конзолата. <br/><span class=\"tab\"></span>Пример за <code>(4,4)</code>:<br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch7-12.gif\"><br/><br/><span class=\"tab\"></span>Упътване: Помислете за подходящи начини за итерация върху масивите с два вложени цикъла. <br/><span class=\"tab\"></span>За d) може да приложите следната стратегия: започвате от позиция (0,0) и се движите надолу N пъти. След това се движите надясно N-1 пъти, след това нагоре N-1 пъти, след това наляво N-2 пъти, след това надолу N-2 пъти и т.н. При всяко преместване слагате в клетката, която напускате поредното число 1, 2, 3, ..., N.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%207%20Solution%2012/Program.cs" + " target=\"_blank\"><b><u>Link 12a</u></b></a><br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%207%20Solution%2012b/Program.cs" + " target=\"_blank\"><b><u>Link 12b</u></b></a><br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%207%20Solution%2012c/Program.cs" + "target=\"_blank\"><b><u>Link 12c</u></b></a><br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%207%20Solution%2012d/Program.cs" + "target=\"_blank\"><b><u>Link 12d</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>13. Да се напише програма, която създава правоъгълна матрица с размер n на m. Размерността и елементите на матрицата да се четат от конзолата. Да се намери подматрицата с размер <code>(3,3)</code>, която има максимална сума. <br/><br/><span class=\"tab\"></span>Упътване: Погледнете предходната задача.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%207%20Solution%2013/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>14. Да се напише програма, която намира най-дългата последователност от еднакви stringелементи в матрица. Последователност в матрица дефинираме като елементите са на съседни и са на същия ред, колона или диагонал. <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch7-14.jpeg\"><br <br/><br/><span class=\"tab\"></span>Упътване: Задача може да се реши, като се провери за всеки елемент дали като тръгнем по диагонал, надолу или надясно, ще получим поредица. Ако получим поредица проверяваме дали тази поредица е по дълга от предходната най-дълга.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%207%20Solution%2014/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>15. Да се напише програма, която създава масив с всички букви от латинската азбука. Да се даде възможност на потребител да въвежда дума от конзолата и в резултат да се извеждат индексите на буквите от думата.<br/><br/><span class=\"tab\"></span>Упътване:  Задачата може да решите с масив и два вложени <code>for</code> цикъла (по буквите на думата и по масива за всяка буква). Задачата има и хитро решение без масив: индексът на дадена главна буква <code>ch</code> от латинската азбука може да се сметне чрез израза: <code> (int) ch – (int) 'A'</code>.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%207%20Solution%2015/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>16. Да се реализира двоично търсене (<code>binary search</code>) в <b>сортиран</b> целочислен масив.<br/><br/><span class=\"tab\"></span>Упътване: Потърсете в Интернет информация за алгоритъма \"<code>binary search</code>\". Какво трябва да е изпълнено, за да използваме този алгоритъм?.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%207%20Solution%2016/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>17. Напишете програма, която сортира целочислен масив по алгоритъма \"<code>merge sort</code>\".<br/><br/><span class=\"tab\"></span>Упътване: Потърсете в Интернет информация за алгоритъма \"<code>merge sort</code>\" и негови реализации.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%207%20Solution%2017/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>18. Напишете програма, която сортира целочислен масив по алгоритъма \"<code>quick sort</code>\".<br/><br/><span class=\"tab\"></span>Упътване: Потърсете в Интернет информация за алгоритъма \"<code>quick sort</code>\" и негови реализации.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%207%20Solution%2018/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>19. Напишете програма, която намира всички прости числа в диапазона [1…10 000 000]. <br/><br/><span class=\"tab\"></span>Упътване: Потърсете в Интернет информация за \"<code>Sieve of Erathostenes</code>\" (Решетото на Ератостен, учено в часовете по математика).<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%207%20Solution%2019/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>20. Напишете програма, която по дадени N числа и число S, проверявадали може да се получи сума равна на S с използване на подмасив от N-те числа (не непременно последователни).<br/><span class=\"tab\"></span>Пример: {2, 1, 2, 4, 3, 5, 2, 6}, S = 14 <span style=\"font-family: Wingdings;\">à</span> yes (1 + 2 + 5 + 6 = 14)<br/><br/><span class=\"tab\"></span>Упътване: Образувайте всички възможни суми по следния алгоритъм: взимате първото число и го маркирате като \"възможна сума\". След това взимате следващото подред число и за всяка вече получена \"възможна сума\" маркирате като възможна сумата на всяка от тях с поредното число. В момента, в който получите числото <code>S</code>, спирате с образуването на сумите. Можете да си пазите \"възможните суми\" или в булев масив където всеки индекс е някоя от сумите, или с по-сложна структура от данни (като <code>Set</code> например).<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%207%20Solution%2020/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>21. Напишете програма, която по дадени <code>N</code>, <code>K</code> и <code>S</code>, намира <code>К</code> на брой елементи измежду <code>N</code>-те числа, чиито сума е точно <code>S</code> или показва, че това е невъзможно.<br/><br/><span class=\"tab\"></span>Упътване: Подобна на задача 20 с тази разлика, че ако сумата е равна на <code>S</code>, но броя елементи е различен от К, продължаваме да търсим. Помислете как да пазите броя числа, с които сте получили определена сума.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%207%20Solution%2021/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>22. Напишете програма, която прочита от конзолата масив от цели числа и премахва минимален на брой числа, така че останали числа да са сортирани в нарастващ ред. Отпечатайте резултата.<br/><span class=\"tab\"></span>Пример: {6, <b>1</b>, 4, <b>3</b>, 0, <b>3</b>, 6, <b>4</b>, <b>5</b>} <span style=\"font-family: Wingdings;\">à</span> {1, 3, 3, 4, 5}<br/><br/><span class=\"tab\"></span>Упътване: Задачата може да се реши като се направи допълнителен масив със дължина броя на елементите. В този масив ще пазим текущата най-дълга редица с край елемента на този индекс.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%207%20Solution%2022/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>23. Напишете програма, която прочита цяло число N от конзолата и отпечатва всички пермутации на числата [1…N]. <br/><span class=\"tab\"></span>Пример:  N = 3 <span style=\"font-family: Wingdings;\">à</span> {1, 2, 3}, {1, 3, 2}, {2, 1, 3}, {2, 3, 1}, {3, 1, 2}, {3, 2, 1}<br/><br/><span class=\"tab\"></span>Упътване: Задачата може да се реши с рекурсия. Напишете подходяща рекурсия и всеки път променяме позицията на всеки елемент.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%207%20Solution%2023/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr>";
    public static string CSBul8 = "<h2>Глава 8. Бройни системи</h2><br/><span class=\"tab\"></span>1. Превърнете числата 151, 35, 43 и 251 в двоична бройна система.<br/><br/><span class=\"tab\"></span>Упътване: Използвайте методите за превръщане от една бройна система в друга. Можете да сверите резултатите си с калкулатора на Windows, който поддържа работа с бройни системи след превключване в режим \"Scientific\".<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch8-1.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>2. Превърнете числото 1111010110011110(2) в шестнадесетична и в десетична бройна система.<br/><br/><span class=\"tab\"></span>Упътване: Погледнете упътването за предходната задача.<br/><br/><span class=\"tab\"></span>Решение:  <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch8-2.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span></span>3. Превърнете шестнайсетичните числа 2A3E, FA, FFFF, 5A0E9 в двоична и десетична бройна система.<br/><br/><span class=\"tab\"></span>Упътване: Погледнете упътването за предходната задача.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch8-3.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span></span>4. Да се напише програма, която преобразува десетично число в двоично.<br/><br/><span class=\"tab\"></span>Упътване: Правилото е \"делим на 2 и долепяме остатъците в обратен ред\". За делене с остатък използваме оператора %.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch8-4.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>5. Да се напише програма, която преобразува двоично число в десе­тично.<br/><br/><span class=\"tab\"></span>Упътване: Започнете от сума 0. Умножете най-десния бит с 1 и го прибавете към сумата. Следващия бит вляво умножете по 2 и добавете към сумата. Следващия бит отляво умножете по 4 и добавете към сумата и т.н.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch8-5.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>6. Да се напише програма, която преобразува десетично число в шестнадесетично.<br/><br/><span class=\"tab\"></span>Упътване:  Правилото е \"делим на основата на системата (16) и долепяме остатъ­ците в обратен ред\". Трябва да си напишем логика за отпечатване на шестнайсетична цифра по дадена стойност между 0 и 15.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch8-6.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>7. Да се напише програма, която преобразува шестнадесетично число в десетично.<br/><br/><span class=\"tab\"></span>Упътване: Започнете от сума 0. Умножете най-дясната цифра с 1 и я прибавете към сумата. Следващата цифра вляво умножете по 16 и я добавете към сумата. Следващата цифра вляво умножете по 16*16 и я добавете към сумата и т.н. до най-лявата шестнайсетична цифра.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch8-7.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>8. Да се напише програма, която преобразува шестнадесетично число в двоично.<br/><br/><span class=\"tab\"></span>Упътване: Ползвайте бързия начин за преминаване между шестнайсетична и двоична бройна система (всяка шестнайсетична цифра съответства на 4 двоични бита).<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch8-8.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>9. Да се напише програма, която преобразува двоично число в шестна­десетично.<br/><br/><span class=\"tab\"></span>Упътване: Ползвайте бързия начин за преминаване между двоична и шестнайсе­тична бройна система (всяка шестнайсетична цифра съответства на 4 двоични бита).<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><img src=\"/Resources/CSResources/ch8-9.jpg\"><br/><br/><hr><br/><br/><span class=\"tab\"></span>10. Да се напише програма, която преобразува двоично число в десетично по схемата на Хорнер.<br/><br/><span class=\"tab\"></span>Упътване: Приложете директно схемата на Хорнер.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%208%20Solution%2010/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>11.  Да се напише програма, която преобразува римските числа в арабски.<br/><br/><span class=\"tab\"></span>Упътване: Сканирайте цифрите на римското число отляво надясно и ги добавяйте към сума, която първоначално е инициализирана с 0. При обработката на всяка римска цифра я взимайте с положителен или отрицателен знак в зависимост от следващата цифра (дали има по-малка или по-голяма десетична стойност).<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%208%20Solution%2011/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>12.  Да се напише програма, която преобразува арабските числа в римски.<br/><br/><span class=\"tab\"></span>Упътване: Имаме абсолютно аналогични съответствия на числата 10, 20, ..., 90 с тяхното представяне с римските цифри \"X\", \"L\" и \"C\", нали? Имаме аналогични съответствия между числата 100, 200, ..., 900 и тяхното представяне с римските цифри \"C\", \"D\" и \"M\" и т.н. <br/><span class=\"tab\"></span>Сега сме готови да преобразуваме числото N в римска бройна система. То трябва да е в интервала [1...3999], иначе съобщаваме за грешка. Първо отделяме хилядите (N / 1000) и ги заместваме с римския им еквивалент. След това отделяме стотиците ((N / 100) % 10) и ги заместваме с римския им еквивалент и т.н.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%208%20Solution%2012/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr><br/><br/><span class=\"tab\"></span>13. Да се напише програма, която по зададени N, S, D преобразува числото N от бройна система с основа S към бройна система с основа D.<br/><br/><span class=\"tab\"></span>Упътване: Можете да прехвърлите числото от бройна система с онова S към бройна система с онова 10, а после от бройна система с основа 10 към бройна система с онова D.<br/><br/><span class=\"tab\"></span>Решение: <br/><span class=\"tab\"></span><a href=" + "https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%208%20Solution%2013/Program.cs" + " target=\"_blank\"><b><u>Link</u></b></a><br/><br/><hr>";
}
